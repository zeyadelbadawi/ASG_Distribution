"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/gallery/route";
exports.ids = ["app/api/gallery/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.js&appDir=D%3A%5Clockdown%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clockdown&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.js&appDir=D%3A%5Clockdown%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clockdown&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_lockdown_app_api_gallery_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/gallery/route.js */ \"(rsc)/./app/api/gallery/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/gallery/route\",\n        pathname: \"/api/gallery\",\n        filename: \"route\",\n        bundlePath: \"app/api/gallery/route\"\n    },\n    resolvedPagePath: \"D:\\\\lockdown\\\\app\\\\api\\\\gallery\\\\route.js\",\n    nextConfigOutput,\n    userland: D_lockdown_app_api_gallery_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/gallery/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnYWxsZXJ5JTJGcm91dGUmcGFnZT0lMkZhcGklMkZnYWxsZXJ5JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZ2FsbGVyeSUyRnJvdXRlLmpzJmFwcERpcj1EJTNBJTVDbG9ja2Rvd24lNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNsb2NrZG93biZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDUDtBQUN0RTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJ0LWFwcC1kaXIvP2RmZDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcbG9ja2Rvd25cXFxcYXBwXFxcXGFwaVxcXFxnYWxsZXJ5XFxcXHJvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nYWxsZXJ5L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZ2FsbGVyeVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2FsbGVyeS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkQ6XFxcXGxvY2tkb3duXFxcXGFwcFxcXFxhcGlcXFxcZ2FsbGVyeVxcXFxyb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZ2FsbGVyeS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.js&appDir=D%3A%5Clockdown%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clockdown&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/gallery/route.js":
/*!**********************************!*\
  !*** ./app/api/gallery/route.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT),\n/* harmony export */   sort: () => (/* binding */ sort)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst storageDir = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"storage\"); // Directory for storing JSON file\nconst filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(storageDir, \"gallery.json\"); // Path to the gallery.json file\nconst imageStorageDir = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"public/assets/images/gallery\"); // Path for image storage\n// Ensure the storage directory and gallery.json file exist\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(storageDir)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(storageDir, {\n        recursive: true\n    });\n    console.log(\"Created storage directory:\", storageDir);\n}\nif (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(filePath)) {\n    fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(filePath, \"[]\", \"utf-8\"); // Initialize gallery.json with an empty array\n    console.log(\"Created gallery.json file with an empty array.\");\n}\n// Function to read and parse the JSON file\nconst readGalleryData = ()=>{\n    try {\n        const fileData = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(filePath, \"utf-8\");\n        return JSON.parse(fileData);\n    } catch (error) {\n        console.error(\"Error reading gallery data:\", error);\n        throw new Error(\"Failed to read gallery data.\");\n    }\n};\n// Function to write data to the JSON file\nconst writeGalleryData = (data)=>{\n    try {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(filePath, JSON.stringify(data, null, 2));\n        console.log(\"Gallery data saved successfully.\");\n    } catch (error) {\n        console.error(\"Error writing gallery data:\", error);\n        throw new Error(\"Failed to write gallery data.\");\n    }\n};\n// POST: Add new image\nasync function POST(req) {\n    try {\n        const formData = await req.formData();\n        let { id } = Object.fromEntries(formData.entries());\n        // Handle image upload\n        const image = formData.get(\"image\");\n        let imageUrl = \"\"; // Initialize with an empty string\n        if (image && image.size > 0) {\n            try {\n                if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(imageStorageDir)) {\n                    fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(imageStorageDir, {\n                        recursive: true\n                    });\n                    console.log(\"Created image storage directory:\", imageStorageDir);\n                }\n                const imagePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(imageStorageDir, image.name);\n                const arrayBuffer = await image.arrayBuffer();\n                await fs__WEBPACK_IMPORTED_MODULE_0___default().promises.writeFile(imagePath, Buffer.from(arrayBuffer));\n                // Update imageUrl to include the relative path\n                imageUrl = `/assets/images/gallery/${image.name}`;\n                console.log(\"Image uploaded successfully. Updated imageUrl:\", imageUrl);\n            } catch (imageError) {\n                console.error(\"Error uploading image:\", imageError);\n                throw new Error(\"Failed to upload image.\");\n            }\n        }\n        // Construct the blog data object\n        const blog = {\n            id,\n            imageUrl\n        };\n        // Read existing gallery data\n        let blogs = readGalleryData();\n        // Add the new blog data to the list\n        blogs.push(blog);\n        // Write updated gallery data to the file\n        writeGalleryData(blogs);\n        return new Response(JSON.stringify({\n            message: \"Data saved successfully!\"\n        }), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in POST method:\", error);\n        return new Response(JSON.stringify({\n            message: `Error saving server data: ${error.message}`\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n// PUT: Update existing image\nasync function PUT(req) {\n    try {\n        const index = parseInt(new URL(req.url).searchParams.get(\"index\"));\n        const formData = await req.formData();\n        // Read existing gallery data\n        let blogs = readGalleryData();\n        // Get the existing data at the specified index\n        const existingData = blogs[index];\n        const id = formData.get(\"id\") || existingData.id;\n        let imageUrl = existingData.imageUrl;\n        // Handle image upload (only update if a new image is provided)\n        const image = formData.get(\"image\");\n        if (image && image.size > 0) {\n            try {\n                if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(imageStorageDir)) {\n                    fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(imageStorageDir, {\n                        recursive: true\n                    });\n                    console.log(\"Created image storage directory:\", imageStorageDir);\n                }\n                const imagePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(imageStorageDir, image.name);\n                const arrayBuffer = await image.arrayBuffer();\n                await fs__WEBPACK_IMPORTED_MODULE_0___default().promises.writeFile(imagePath, Buffer.from(arrayBuffer));\n                // Update imageUrl to include the relative path\n                imageUrl = `/assets/images/gallery/${image.name}`;\n                console.log(\"Image uploaded successfully:\", imageUrl);\n            } catch (imageError) {\n                console.error(\"Error uploading image:\", imageError);\n                throw new Error(\"Failed to upload image.\");\n            }\n        }\n        // Construct the updated blog data object\n        const blog = {\n            id,\n            imageUrl\n        };\n        // Update the blog data at the specified index\n        blogs[index] = blog;\n        // Write updated gallery data to the file\n        writeGalleryData(blogs);\n        return new Response(JSON.stringify({\n            message: \"Data updated successfully!\"\n        }), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in PUT method:\", error);\n        return new Response(JSON.stringify({\n            message: `Error updating server data: ${error.message}`\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n// DELETE: Delete an image\nasync function DELETE(req) {\n    try {\n        const index = parseInt(new URL(req.url).searchParams.get(\"index\"));\n        // Read existing gallery data\n        let blogs = readGalleryData();\n        // Remove the blog data at the specified index\n        blogs.splice(index, 1);\n        // Write updated gallery data to the file\n        writeGalleryData(blogs);\n        return new Response(JSON.stringify({\n            message: \"Data deleted successfully!\"\n        }), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in DELETE method:\", error);\n        return new Response(JSON.stringify({\n            message: `Error deleting server data: ${error.message}`\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n// GET: Fetch gallery data\nasync function GET() {\n    try {\n        let blogs = readGalleryData();\n        return new Response(JSON.stringify(blogs), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in GET method:\", error);\n        return new Response(JSON.stringify({\n            message: \"Error fetching server data.\"\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n// POST: Handle sorting\nasync function sort(req) {\n    try {\n        const newOrder = await req.json(); // Receive the new order from the client\n        // Validate the incoming data\n        if (!Array.isArray(newOrder)) {\n            return new Response(JSON.stringify({\n                message: \"Invalid data format\"\n            }), {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // Write the updated order to the JSON file\n        writeGalleryData(newOrder);\n        return new Response(JSON.stringify({\n            message: \"Gallery order updated successfully!\"\n        }), {\n            status: 200,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Error updating gallery order:\", error);\n        return new Response(JSON.stringify({\n            message: `Error updating gallery order: ${error.message}`\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/gallery/route.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.js&appDir=D%3A%5Clockdown%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Clockdown&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();